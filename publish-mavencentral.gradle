apply plugin: 'com.android.library'

apply plugin: 'maven-publish'
apply plugin: 'signing'


//生成文档注释
task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}
//将文档打包成jar
task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}
//将源码打包
task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}


artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}


//加载资源
Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream();
properties.load(inputStream)

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = properties.getProperty('GROUP_ID')
                artifactId = project.artifactId
                version = project.artifactVersion

                // Adds Javadocs and Sources as separate jars.
//                artifact file("$buildDir/outputs/aar/${project.name}-release.aar")
                artifact androidSourcesJar
                artifact androidJavadocsJar

                pom {
                    name = project.artifactName
                    packaging = 'aar'
                    description = project.artifactDescription
                    url = project.githubUrl

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'atlantisspeed'
                            name = 'atlantisspeed'
                            email = 'atlantisspeed@gmail.com'
                        }
                    }

                    scm {
                        url = project.githubUrl
                        connection = "scm:git@${project.githubHttps}"
                        developerConnection = "scm:${project.githubSSH}"
                    }

                }
            }
        }

        repositories {
            maven {

                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username = properties.getProperty('OSSRH_USERNAME')
                    password = properties.getProperty('OSSRH_PASSWORD')
                }
            }
        }
    }

    signing {
        required { gradle.taskGraph.hasTask("publish") }
        useInMemoryPgpKeys(
                properties.getProperty('GPG_KEY_ID'),
                properties.getProperty('GPG_KEY'),
                properties.getProperty('GPG_KEY_PASSWORD')
        )
        sign publishing.publications.release
    }
}